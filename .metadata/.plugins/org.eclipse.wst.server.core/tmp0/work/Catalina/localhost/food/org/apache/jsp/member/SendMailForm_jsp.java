/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-05-31 13:49:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SendMailForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>라따뚜이</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".sendmail{\r\n");
      out.write(" width: 300px;\r\n");
      out.write(" margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field {\r\n");
      out.write("  margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field label {\r\n");
      out.write("  display: block;\r\n");
      out.write("  font-size: 15px;\r\n");
      out.write("  color: #777;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field input {\r\n");
      out.write("  display: block;\r\n");
      out.write("  min-width: 250px;\r\n");
      out.write("  line-height: 1.5;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"submit\"] {\r\n");
      out.write("  display: block;\r\n");
      out.write("  padding: 6px 30px;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  background-color: black;\r\n");
      out.write("  margin-left: 70px;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  border: none\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1 align=\"center\">관리자에게 메일보내기</h1>\r\n");
      out.write("<div class=\"sendmail\">\r\n");
      out.write("\r\n");
      out.write("\t<form id=\"form\">\r\n");
      out.write("  <div class=\"field\">\r\n");
      out.write("    <label for=\"to_name\">받는 사람</label>\r\n");
      out.write("    <input type=\"text\" name=\"to_name\" id=\"to_name\" value=\"Ratatouille Team\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"field\">\r\n");
      out.write("    <label for=\"from_name\">보내는 사람</label>\r\n");
      out.write("    <input type=\"text\" name=\"from_name\" id=\"from_name\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"field\">\r\n");
      out.write("    <label for=\"reply_to\">답장 받을 주소</label>\r\n");
      out.write("    <input type=\"text\" name=\"reply_to\" id=\"reply_to\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"field\">\r\n");
      out.write("    <label for=\"message\">메세지 내용</label>\r\n");
      out.write("  <!--   <input type=\"text\" style=\"width:300px;height:200px;\" name=\"message\" id=\"message\"> -->\r\n");
      out.write("\t<textarea id=\"message\" name=\"message\" rows=\"10\" cols=\"35\"></textarea>\r\n");
      out.write("\t<!-- 메일 보내기는 text 대신에  textarea 형태로 변경함. -백성진--->\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <input type=\"submit\" id=\"button\" style=\"height: 35px;\" value=\"Send Email\" >\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\"\r\n");
      out.write("\t  src=\"https://cdn.jsdelivr.net/npm/emailjs-com@2/dist/email.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t  emailjs.init('user_dYQ8zrPiKbhx89E0MAnEu')\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tconst btn = document.getElementById('button');\r\n");
      out.write("\r\n");
      out.write("\tdocument.getElementById('form')\r\n");
      out.write("\t .addEventListener('submit', function(event) {\r\n");
      out.write("\t   event.preventDefault();\r\n");
      out.write("\r\n");
      out.write("\t   btn.value = 'Sending...';\r\n");
      out.write("\r\n");
      out.write("\t   const serviceID = 'default_service';\r\n");
      out.write("\t   const templateID = 'template_k4ko05w';\r\n");
      out.write("\r\n");
      out.write("\t   emailjs.sendForm(serviceID, templateID, this)\r\n");
      out.write("\t    .then(() => {\r\n");
      out.write("\t      btn.value = 'Send Email';\r\n");
      out.write("\t      alert('메세지 전송 성공 !');\r\n");
      out.write("\t      window.close();\r\n");
      out.write("\t    }, (err) => {\r\n");
      out.write("\t      btn.value = 'Send Email';\r\n");
      out.write("\t      alert(JSON.stringify(err));\r\n");
      out.write("\t    });\r\n");
      out.write("\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
