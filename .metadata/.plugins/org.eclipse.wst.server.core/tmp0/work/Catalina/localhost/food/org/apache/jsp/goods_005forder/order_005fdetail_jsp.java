/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-06-13 08:16:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goods_005forder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.admin.goods.db.GoodsBean;
import com.order.db.OrderBean;
import java.util.List;

public final class order_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.order.db.OrderBean");
    _jspx_imports_classes.add("com.admin.goods.db.GoodsBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>라따뚜이</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./cjkit/web/css/common.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   ");

     //request.setAttribute("orderDetailList", ordao.orderDetail(trade_num));
   
     List orderDetailList 
          = (List) request.getAttribute("orderDetailList");
     
     int total=0; // 총합 금액
        
   
      out.write("\r\n");
      out.write("   <h2 style=\"text-align: center;\"> 주문내역 상세보기 </h2>\r\n");
      out.write("   <br>\r\n");
      out.write("\r\n");
      out.write("   <table border=\"1\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td>주문번호</td>\r\n");
      out.write("        <td>주문일자</td>\r\n");
      out.write("        <td>상품명</td>\r\n");
      out.write("        <td>주문 수량</td>\r\n");
      out.write("        <td>주문 금액</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      \r\n");
      out.write("      ");
for(int i=0;i<orderDetailList.size();i++){
    	    OrderBean ob =(OrderBean) orderDetailList.get(i);
    	    total += ob.getF_or_sum();
    	  
      out.write("\r\n");
      out.write("\t      <tr>\t        \t      \r\n");
      out.write("\t        <td>");
      out.print(ob.getF_or_trade_num() );
      out.write("</td>\r\n");
      out.write("\t        <td>");
      out.print(ob.getF_or_date() );
      out.write("</td>\r\n");
      out.write("\t        <td>");
      out.print(ob.getF_or_gs_name() );
      out.write("</td>\r\n");
      out.write("\t        <td>");
      out.print(ob.getF_or_bas_amount() );
      out.write("</td>\r\n");
      out.write("\t        <td>");
      out.print(ob.getF_or_sum() );
      out.write("</td>\r\n");
      out.write("\t      </tr>\r\n");
      out.write("      ");
} 
      out.write("\r\n");
      out.write("   </table>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t\r\n");
      out.write("      ");
for(int i=0;i<orderDetailList.size();i++){
    	    OrderBean ob =(OrderBean) orderDetailList.get(i);
    	  
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   <h3> 받는 사람 : ");
      out.print(ob.getF_or_rec_name() );
      out.write("</h3><br>\r\n");
      out.write("   <h3> 주문 받으실 주소 : ");
      out.print(ob.getF_or_rec_postcode() );
      out.write(", \r\n");
      out.write("   \t\t\t\t\t");
      out.print(ob.getF_or_rec_address() );
      out.write("\r\n");
      out.write("   \t\t\t\t\t");
      out.print(ob.getF_or_rec_detailAddress() );
      out.write("\r\n");
      out.write("   \t\t\t\t\t");
      out.print(ob.getF_or_rec_extraAddress() );
      out.write("</h3><br>\r\n");
      out.write("\r\n");
      out.write("   <h3> 배송 메세지 : ");
      out.print(ob.getF_or_memo() );
      out.write("</h3><br>\r\n");
      out.write("   \t\t\t\t\t\r\n");
      out.write("   \t\t");

   		break;
      } 
      out.write("\t\t\t\r\n");
      out.write("   \t\t\t\t\t\r\n");
      out.write("   <h3> 총 주문 금액 : ");
      out.print(total );
      out.write("원</h3>\r\n");
      out.write("   \r\n");
      out.write("   <hr><hr>\r\n");
      out.write("   \r\n");
      out.write("<a href=\"#\" onclick=\"javascript:window.close()\">[이전 페이지]</a>\r\n");
      out.write("\r\n");
      out.write("  <a href=\"#\" onclick=\"opener.location.href='./GoodsList.go';self.close()\">[쇼핑몰로 돌아가기]</a>\t \t\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
