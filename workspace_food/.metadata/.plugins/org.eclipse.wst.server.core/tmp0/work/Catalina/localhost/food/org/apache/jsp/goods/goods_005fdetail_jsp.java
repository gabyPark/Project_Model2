/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-05-31 13:17:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.admin.goods.db.GoodsBean;

public final class goods_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1622352018889L));
    _jspx_dependants.put("jar:file:/C:/Users/isys1/OneDrive/바탕%20화면/아이티윌/workspace_food/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/food/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.admin.goods.db.GoodsBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>라따뚜이</title>\r\n");
      out.write("<!-- (★★★시작) 추가 (이미지 슬라이드 -css 부분 ) \r\n");
      out.write("\t\t이미지 슬라이드 기능 구현에 필요한 css코드입니다.\r\n");
      out.write("\t\tcss 파일을 따로 안 만들어서 .. 일단 헤드 부분이 붙여서 보냅니다!\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("* {box-sizing: border-box}\r\n");
      out.write("body {font-family: Verdana, sans-serif; margin:0}\r\n");
      out.write(".mySlides {display: none}\r\n");
      out.write("img {vertical-align: middle;}\r\n");
      out.write("\r\n");
      out.write("/* Slideshow container */\r\n");
      out.write(".slideshow-container {\r\n");
      out.write("  max-width: 1000px;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Next & previous buttons */\r\n");
      out.write(".prev, .next {\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 50%;\r\n");
      out.write("  width: auto;\r\n");
      out.write("  padding: 16px;\r\n");
      out.write("  margin-top: -22px;\r\n");
      out.write("  color: white;\r\n");
      out.write("  font-weight: bold;\r\n");
      out.write("  font-size: 18px;\r\n");
      out.write("  transition: 0.6s ease;\r\n");
      out.write("  border-radius: 0 3px 3px 0;\r\n");
      out.write("  user-select: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Position the \"next button\" to the right */\r\n");
      out.write(".next {\r\n");
      out.write("  right: 0;\r\n");
      out.write("  border-radius: 3px 0 0 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* On hover, add a black background color with a little bit see-through */\r\n");
      out.write(".prev:hover, .next:hover {\r\n");
      out.write("  background-color: rgba(0,0,0,0.8);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Caption text */\r\n");
      out.write(".text {\r\n");
      out.write("  color: #f2f2f2;\r\n");
      out.write("  font-size: 15px;\r\n");
      out.write("  padding: 8px 12px;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  bottom: 8px;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Number text (1/3 etc) */\r\n");
      out.write(".numbertext {\r\n");
      out.write("  color: #f2f2f2;\r\n");
      out.write("  font-size: 12px;\r\n");
      out.write("  padding: 8px 12px;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Fading animation */\r\n");
      out.write(".fade {\r\n");
      out.write("  -webkit-animation-name: fade;\r\n");
      out.write("  -webkit-animation-duration: 1.5s;\r\n");
      out.write("  animation-name: fade;\r\n");
      out.write("  animation-duration: 1.5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@-webkit-keyframes fade {\r\n");
      out.write("  from {opacity: .4} \r\n");
      out.write("  to {opacity: 1}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes fade {\r\n");
      out.write("  from {opacity: .4} \r\n");
      out.write("  to {opacity: 1}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* On smaller screens, decrease text size */\r\n");
      out.write("@media only screen and (max-width: 300px) {\r\n");
      out.write("  .prev, .next,.text {font-size: 11px}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" table {\r\n");
      out.write("\twidth: 700px;\r\n");
      out.write("\theight: 500px;\r\n");
      out.write("\tmargin-left: 20px;/* 삭제 */\r\n");
      out.write("} \r\n");
      out.write("</style>\r\n");
      out.write("<!-- (★★★끝) 추가 (이미지 슬라이드 -css )-->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./cjkit/web/css/common.css\">\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function isBasket(){\r\n");
      out.write("    \t//alert(\" 장바구니 처리 \");\r\n");
      out.write("    \t\r\n");
      out.write("    \t// 구매 수량,크기,색상 미 선택시 이동 X\r\n");
      out.write("    \tif(document.gfr.amount.value == \"\"){\r\n");
      out.write("    \t\talert(\" 구매수량을 입력하세요.\");\r\n");
      out.write("    \t\tdocument.gfr.amount.focus();\r\n");
      out.write("    \t\treturn;\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("\t\tvar check = confirm(\"장바구니에 저장하시겠습니까?\");\r\n");
      out.write("    \t\r\n");
      out.write("    \tif(check){\r\n");
      out.write("    \t\tdocument.gfr.action = \"./BasketAdd.ba\";\r\n");
      out.write("    \t\tdocument.gfr.submit();\t    \t\t\r\n");
      out.write("    \t}else{\r\n");
      out.write("    \t\treturn;\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

	GoodsBean gb=(GoodsBean)request.getAttribute("goods");

      out.write("\r\n");
      out.write("\t<br><h1 align=\"center\"> 상품상세 페이지  </h1><br>\r\n");
      out.write("\t<form action=\"\" method=\"post\" name=\"gfr\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"gs_num\" value=\"");
      out.print(gb.getF_gs_num());
      out.write("\">\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td rowspan=\"7\" style=\"width: 400px;\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("<!-- (★★★시작) 추가 (메인 이미지 보이는 칸 안에,업로드한 모든 이미지를 슬라이드 형태로 보여지도록 변경하였습니다~)-->\r\n");
      out.write("<div class=\"slideshow-container\">\r\n");
      out.write("    \r\n");
      out.write("   ");

   		// upload폴더에 이미지가 없으면 사진 안떠용ㅠㅠ! 사진을 넣고 테스트해 주세요~		
   
		// String[] 배열 안에 있는 사진 갯수 구하기
		// 갯수를 따로 구해야 하는 이유 : null값 제어 
		// (gb.getF_gs_img().split(",").length만큼 반복되도록 하니까 null값인 사진은 이미지가 안 떠야 하는데 공백 이미지칸만 뜸
		// 총 4개의 칸이 있는 String 배열(이미지 업로드시 4개 이미지만 업로드 되도록 해놨음)에 3개의 사진만 업로드한 경우 마지막 칸은 null값이 저장됨
		// gb.getF_gs_img().split(",")[i] != null 인 경우에만 이미지 슬라이드가 보여지도록 제어하려고 했으나 제어x
		// console에 찍어보니까 null 문자값이 나오길래 equals("null") 사용하니 제어됨.
		// 반복문을 많이 사용하면 좋지 않다고 들어서...ㅠㅠ 혹시 더 좋은 방법을 알고 계신다면 코드 수정해주세요^_^b
   		
		int size = gb.getF_gs_img().split(",").length;//split했을 때, String배열에 저장되는 이미지 사진 갯수(null 갯수 포함)
   		int count = 0; // split했을 때, String 배열에서 이미지 사진 갯수(null 갯수 제외)
   		for(int i=0;i<size;i++){
   			if(!gb.getF_gs_img().split(",")[i].equalsIgnoreCase("null")){
   				
	   			//System.out.println(gb.getF_gs_img().split(",")[i]); //업로드 되어있는 이미지 이름
   				count += 1;
   			}
   		}
   			//System.out.println("count:"+count);
   			
   		for(int i=0;i<count;i++){ // 이미지 갯수만큼 이미지 슬라이드 반복
   			
   	
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \t\t<div class=\"mySlides fade\">\r\n");
      out.write("   \t\t\t\r\n");
      out.write("  \t\t\t<div class=\"numbertext\">");
      out.print(i+1 );
      out.write(' ');
      out.write('/');
      out.write(' ');
      out.print(count );
      out.write("</div>\r\n");
      out.write("  \t\t\t\t<img src=\"./upload/");
      out.print(gb.getF_gs_img().split(",")[i] );
      out.write("\" \r\n");
      out.write("  \t\t\t\t\tstyle=\"width: 400px; height: 400px;\">\r\n");
      out.write("\t\t    </div>\t\r\n");
      out.write("   \t\t\r\n");
      out.write("   \t");

   		}
	
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\t\t<!-- 다음 이미지로 이동하는 > , < 버튼 -->\r\n");
      out.write("\t\t<a class=\"prev\" onclick=\"plusSlides(-1) \">&#10094;</a>\r\n");
      out.write("\t\t<a class=\"next\" onclick=\"plusSlides(1) \">&#10095;</a>\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\t\r\n");
      out.write("<!-- (★★★끝) 추가 (메인 이미지 보이는 칸 안에,업로드한 모든 이미지를 슬라이드 형태로 보여지도록 변경하였습니다~) -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>상품이름 : <b>");
      out.print(gb.getF_gs_name() );
      out.write("</b></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>판매가격 : ");
      out.print(gb.getF_gs_price() );
      out.write(" 원 </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>구매수량 : <input type=\"text\" name=\"amount\" placeholder=\"수량을 입력해주세요\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>남은수량 : ");
      out.print(gb.getF_gs_amount() );
      out.write(" </td>\t\r\n");
      out.write("\t\t</tr>\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t");

			  String msg = gb.getF_gs_msg();
	
		      if(msg!=null){
		          msg = msg.replace("\r\n", "<br>");
		      }
			
      out.write("\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t상품내용 :<br><br>\r\n");
      out.write("\t\t\t\t");
      out.print(msg );
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><a href=\"javascript:isBasket()\">&nbsp;&nbsp;&nbsp;[장바구니 담기]</a>\r\n");
      out.write("\t\t\t<!-- <a href=\"javascript:isBuy()\">[구매하기]</a></td> 현재 사용안함.. 주석처리함.-->\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<!-- (★★★시작) 추가 (이미지 슬라이드-자바스크립트) 꼭 바디 닫히는 태그(/body) 바로 위에 붙여주세요!! 안그럼 작동이 잘 안되요ㅠㅠ -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\tvar slideIndex = 1;\r\n");
      out.write("\tshowSlides(slideIndex);\r\n");
      out.write("\t\r\n");
      out.write("\t// Next/previous controls\r\n");
      out.write("\tfunction plusSlides(n) {\r\n");
      out.write("\t  showSlides(slideIndex += n);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// Thumbnail image controls\r\n");
      out.write("\tfunction currentSlide(n) {\r\n");
      out.write("\t  showSlides(slideIndex = n);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction showSlides(n) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t  var i=0;\r\n");
      out.write("\t  var slides = document.getElementsByClassName(\"mySlides\");\r\n");
      out.write("\t  var dots = document.getElementsByClassName(\"dot\");\r\n");
      out.write("\t  /* alert(slides.length); */\r\n");
      out.write("\t  if (n > slides.length) {slideIndex = 1}\r\n");
      out.write("\t  if (n < 1) {slideIndex = slides.length}\r\n");
      out.write("\t  for (i = 0; i < slides.length; i++) {\r\n");
      out.write("\t      slides[i].style.display = \"none\";\r\n");
      out.write("\t  }\r\n");
      out.write("\t  for (i = 0; i < dots.length; i++) {\r\n");
      out.write("\t      dots[i].className = dots[i].className.replace(\" active\", \"\");\r\n");
      out.write("\t  }\r\n");
      out.write("\t  \r\n");
      out.write("\t  slides[slideIndex-1].style.display = \"block\";\r\n");
      out.write("\t  dots[slideIndex-1].className += \" active\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<!-- (★★★끝) 추가 (이미지 슬라이드-자바스크립트) -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
