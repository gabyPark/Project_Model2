/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.60
 * Generated at: 2021-05-30 06:24:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.goodRes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.review.db.ReviewBean;
import java.util.ArrayList;
import com.goodres.db.GoodResBoardBean;

public final class goodres_005fcontent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.review.db.ReviewBean");
    _jspx_imports_classes.add("com.goodres.db.GoodResBoardBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>라따뚜이</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./cjkit/web/css/common.css?20200924090025\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./cjkit/web/css/goodResCSS/goodres_content.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		GoodResBoardBean grbb = (GoodResBoardBean) request.getAttribute("grbb");
			
		// 세션확인
		HttpSession sessionChk = request.getSession();
		String f_mem_id = (String) sessionChk.getAttribute("f_mem_id");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<input type=\"hidden\" id=\"session_id\" value=\"");
      out.print(f_mem_id );
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"get_gr_num\" value=\"");
      out.print(grbb.getF_gr_num() );
      out.write("\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"div_content_all\">\r\n");
      out.write("\t\t<div class=\"div_title_content\">\t\t\r\n");
      out.write("\t\t\t<table class=\"div_title_table\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"font-size: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(grbb.getF_gr_name() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<label class=\"lab_staravg\" style=\"font-size: 20px;\"><b>");
      out.print(String.format("%.1f", grbb.getF_gr_staravg()) );
      out.write("</b></label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr>\t\t\r\n");
      out.write("\t\t<section class=\"sec_content\">\t\t\t\r\n");
      out.write("\t\t\t<div class=\"div_content\">\r\n");
      out.write("\t\t\t\t<table class=\"tab_content\">\r\n");
      out.write("\t\t\t\t\t<tr><td class=\"tab_content_td01\" rowspan=\"7\"><img class=\"td_img\" src=\"");
      out.print( grbb.getF_gr_img() );
      out.write("\"></td></tr>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr><td>주소</td><td>");
      out.print(grbb.getF_gr_addr() );
      out.write("</td></tr>\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr><td>전화번호</td><td>");
      out.print(grbb.getF_gr_tel() );
      out.write("</td></tr>\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr><td>음식종류</td><td>");
      out.print(grbb.getF_gr_foodtype() );
      out.write("</td></tr>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr><td>메뉴</td><td>");
      out.print(grbb.getF_gr_menu() );
      out.write("</td></tr>\r\n");
      out.write("\t\t\t\t\t<tr><td>운영시간</td><td>");
      out.print(grbb.getF_gr_open() );
      out.write("</td></tr>\r\n");
      out.write("\t\t\t\t\t<tr><td>홈페이지</td><td>");
      out.print(grbb.getF_gr_hp() );
      out.write("</td></tr>\t\t\t\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"lat\" name=\"lat\" value=\"");
      out.print(grbb.getF_gr_lati() );
      out.write("\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"lng\" name=\"lng\" value=\"");
      out.print(grbb.getF_gr_long() );
      out.write("\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"gr_name\" name=\"gr_name\" value=\"");
      out.print(grbb.getF_gr_name() );
      out.write("\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"map\" id=\"map\"></div>\r\n");
      out.write("\t\t\t<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=29e9b6b552e8b0d78bef9a137a6809e2\"></script>\t\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\t\t\t\r\n");
      out.write("\t\t\t\tvar mapContainer = document.getElementById('map'), // 이미지 지도를 표시할 div\r\n");
      out.write("\t\t\t\t\tmapOption = { \r\n");
      out.write("\t\t\t\t\t\tcenter: new kakao.maps.LatLng(document.getElementById('lat').value, document.getElementById('lng').value), // 이미지 지도의 중심좌표 \r\n");
      out.write("\t\t\t\t\t\tlevel: 6, // 이미지 지도의 확대 레벨\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar position = [\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\"title\": document.getElementById('gr_name').value,\t\t\r\n");
      out.write("\t\t\t\t\t\t\"latlng\": new kakao.maps.LatLng(document.getElementById('lat').value, document.getElementById('lng').value)\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t];\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write(" \t\t\t\tvar imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"; \r\n");
      out.write("\t\t\t\t\t\t\t\t    \r\n");
      out.write("\t\t\t    // 마커 이미지의 이미지 크기 입니다\r\n");
      out.write("\t\t\t    var imageSize = new kakao.maps.Size(24, 35); \r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    // 마커 이미지를 생성합니다    \r\n");
      out.write("\t\t\t    var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    // 마커를 생성합니다\r\n");
      out.write("\t\t\t    var marker = new kakao.maps.Marker({\r\n");
      out.write("\t\t\t        map: map, // 마커를 표시할 지도\r\n");
      out.write("\t\t\t        position: position[0].latlng, // 마커를 표시할 위치\r\n");
      out.write("\t\t\t        title : position[0].title,  // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n");
      out.write("\t\t\t        image : markerImage // 마커 이미지 \r\n");
      out.write("\t\t\t    });\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tfunction setZoomable(zoomable) {\r\n");
      out.write("\t\t\t\t    // 마우스 휠로 지도 확대,축소 가능여부를 설정합니다\r\n");
      out.write("\t\t\t\t    map.setZoomable(zoomable);    \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\t\t\t\t\r\n");
      out.write("\t\t\t\tfunction reviewWrite() {\r\n");
      out.write("\t\t\t\t\tvar session_id = document.getElementById(\"session_id\").value;\r\n");
      out.write("\t\t\t\t\tvar get_gr_num = document.getElementById(\"get_gr_num\").value;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(session_id == \"null\") {\r\n");
      out.write("\t\t\t\t\t\talert(\"로그인해주세요\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tlocation.href=\"./ReviewWrite.rv?gr_num=\" + get_gr_num;\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<hr>\t\t\r\n");
      out.write("\t\t<section class=\"sec_review\">\r\n");
      out.write("\t\t\t<button class=\"btn_review\" onclick=\"return reviewWrite()\">리뷰쓰기</button>\t\t\t\r\n");
      out.write("\t\t\t");

				int cnt = (Integer) request.getAttribute("cnt");
				int pageSize = (Integer) request.getAttribute("pageSize");
				int currentPage = (Integer) request.getAttribute("currentPage");
				int startRow = (Integer) request.getAttribute("startRow");
				ArrayList reviewList = (ArrayList) request.getAttribute("reviewList");				
				
	 			if (cnt != 0) {
	 				for (int i = 0; i < reviewList.size(); i++) {
	 					ReviewBean rb = (ReviewBean) reviewList.get(i);
	 					
	 		
      out.write("\r\n");
      out.write("\t \t\t<div class=\"div_review\">\t \t\t\r\n");
      out.write("\t\t\t\t<table class=\"tab_review\" border=\"1\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>id</th>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(rb.getF_grv_mem_id());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>star</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<div class='star-rating'>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<span style=\"width: calc(");
      out.print(rb.getF_grv_star());
      out.write("*20%)\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
				
						if(!rb.getF_grv_img().equals("")) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<th>image</th>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");

							int size = rb.getF_grv_img().split(",").length;
							int count = 0;
							for (int j = 0; j < size; j++) {
								if (!rb.getF_grv_img().split(",")[j].equalsIgnoreCase("null")) {
									count += 1;
						
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img id=\"myImg\" src=\"./upload/");
      out.print(rb.getF_grv_img().split(",")[j]);
      out.write("\" width=\"130\" height=\"150\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"myModal\" class=\"modal\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<span class=\"close\">&times;</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img class=\"modal-img\" id=\"img01\">\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");

								}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

						} else {
							
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>content</th>\r\n");
      out.write("\t\t\t\t\t\t");

							String content = rb.getF_grv_content();
									if (content != null) {
										content = content.replace("\r\n", "<br>");
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(content);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");

							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("        ");

          if(rb.getF_grv_mem_id().equals(f_mem_id)){ 
        
      out.write("\r\n");
      out.write("          <input type=\"button\" value=\"삭제하기\"\r\n");
      out.write("          onclick=\"location.href='./ReviewDelete.rv?gr_num=");
      out.print(rb.getF_grv_gr_num() );
      out.write("&grv_num=");
      out.print(rb.getF_grv_num() );
      out.write("'\">\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t");

					}
				}
			
      out.write("\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");

				if (cnt != 0) {
					int pageCount = cnt / pageSize + (cnt % pageSize == 0 ? 0 : 1);
					int pageBlock = 5;
					int startPage = ((currentPage - 1) / pageBlock) * pageBlock + 1;
					int endPage = startPage + pageBlock - 1;
					if (endPage > pageCount) {
						endPage = pageCount;
					}
			
      out.write("\r\n");
      out.write("\t\t\t<div class=\"pagination\">\r\n");
      out.write("\t\t\t\t<div class=\"pagination_chd\">\r\n");
      out.write("\t\t\t\t");

					if (startPage > pageBlock) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"./GoodResContentAction.gr?pageNum=");
      out.print(startPage - pageBlock);
      out.write("&num=");
      out.print(grbb.getF_gr_num());
      out.write("\">&laquo;</a>\r\n");
      out.write("\t\t\t\t");

					}
						for (int i = startPage; i <= endPage; i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"./GoodResContentAction.gr?pageNum=");
      out.print(i);
      out.write("&num=");
      out.print(grbb.getF_gr_num());
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a>\r\n");
      out.write("\t\t\t\t");

					}
						if (endPage < pageCount) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"./GoodResContentAction.gr?pageNum=");
      out.print(startPage + pageBlock);
      out.write("&num=");
      out.print(grbb.getF_gr_num());
      out.write("\">&raquo;</a>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/footer.jsp", out, false);
      out.write("<!-- clear: both; 추가 -->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"fix_contsbtm\">\t\r\n");
      out.write("\t\t<!-- 스크립트요청사항 : 바닥컨텐츠가 .btm 클래스 추가해주세요 -->\r\n");
      out.write("\t\t<div class=\"fx_button chatbot ui_chatBot show\">\r\n");
      out.write("<!-- \t\t\t<button type=\"button\" class=\"chatbot\"\r\n");
      out.write("\t\t\t\tonclick=\"javascript:cj.chatbot.open('http://cookit.oli-va.com/');\">\r\n");
      out.write("\t\t\t\t<span class=\"hide\">챗봇으로 문의하기</span>\r\n");
      out.write("\t\t\t</button> -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"fx_button top ui_gotoTop show\">\r\n");
      out.write("\t\t\t<a href=\"#wrap\" role=\"button\" onclick=\"window.scrollTo(0,0);\"> <span class=\"hide\">페이지 상단으로</span>\r\n");
      out.write("\t\t\t</a>\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t// modal 스크립트\r\n");
      out.write("\t\tvar modal = document.getElementById(\"myModal\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar img = document.getElementById(\"myImg\");\r\n");
      out.write("\t\tvar modalImg = document.getElementById(\"img01\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t$(document).on(\"click\", \"img\", function(){\r\n");
      out.write("\t\t\tmodal.style.display = \"block\";\r\n");
      out.write("\t\t\tmodalImg.src = this.src;\t\t\t\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar span = document.getElementsByClassName(\"close\")[0];\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tspan.onclick = function() {\r\n");
      out.write("\t\t  modal.style.display = \"none\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// modal 스크립트\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
