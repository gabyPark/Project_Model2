package com.goodres.db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

import com.member.db.MemberBean;

public class GoodResDAO {
	// DB - f_member 테이블의 모든 처리 
	Connection con = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String sql ="";		
	
	// 디비연결 - 커넥션풀 
	private Connection getCon() throws Exception {
		Context initCTX = new InitialContext();
		DataSource ds = (DataSource) initCTX.lookup("java:comp/env/jdbc/foodDB");		
		con = ds.getConnection();
		
		System.out.println("DAO : 디비 연결 성공! -> " + con);
		
		return con;
	}
	
	// 자원해제 
	public void closeDB() {
		try {
			if(rs != null){ rs.close(); }
			if(pstmt != null){ pstmt.close(); }
			if(con != null){ con.close(); }
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	////////////////////////////////////////////////////////////////////////////////////
	// getGoodResList()
	public HashMap<String, List> getGoodResList(){
		List<GoodResBoardBean> GoodResList = null;
		
		HashMap<String, List> totalList = new HashMap<>();
		GoodResBoardBean grb = null;
		
		String[] gu = {"강서구","금정구","기장군","남구","동구","동래구",
					   "부산진구","북구","사상구","사하구","서구","수영구",
					   "연제구","영도구","중구","해운대구"};
		
		try {
			//1.2. 디비연결
			con = getCon();
			
			for(int i=0; i<gu.length;i++){
				
				GoodResList = new ArrayList<GoodResBoardBean>();
				
				//3. sql구문 작성  & pstmt 객체 생성
				sql ="select * from f_goodres where f_gr_gu=?";
				
				pstmt = con.prepareStatement(sql);
							
				pstmt.setString(1, gu[i]);
	
				//4. sql구문 실행
				rs = pstmt.executeQuery();
				
				//5. 데이터 처리 
				while(rs.next()){
					grb = new GoodResBoardBean();
					
					grb.setF_gr_addr(rs.getString("f_gr_addr"));
					grb.setF_gr_cnt(rs.getInt("F_gr_cnt"));
					grb.setF_gr_content(rs.getString("f_gr_content"));
					grb.setF_gr_detailAddr(rs.getString("f_gr_detailAddr"));
					grb.setF_gr_eximg(rs.getString("f_gr_eximg"));
					grb.setF_gr_gu(rs.getString("f_gr_gu"));
					grb.setF_gr_hp(rs.getString("f_gr_hp"));
					grb.setF_gr_img(rs.getString("f_gr_img"));
					grb.setF_gr_lati(rs.getDouble("f_gr_lati"));
					grb.setF_gr_like(rs.getInt("f_gr_like"));
					grb.setF_gr_loca(rs.getString("f_gr_loca"));
					grb.setF_gr_long(rs.getDouble("f_gr_long"));
					grb.setF_gr_menu(rs.getString("f_gr_menu"));
					grb.setF_gr_name(rs.getString("f_gr_name"));
					grb.setF_gr_num(rs.getInt("f_gr_num"));
					grb.setF_gr_open(rs.getString("f_gr_open"));
					grb.setF_gr_rv_cnt(rs.getInt("f_gr_rv_cnt"));
					grb.setF_gr_staravg(rs.getFloat("f_gr_staravg"));
					grb.setF_gr_tel(rs.getString("f_gr_tel"));
					grb.setF_gr_thumb(rs.getString("f_gr_thumb"));
									
					// 리스트 한칸에 맛집 1곳의 정보를 저장
					GoodResList.add(grb);
				} // while
				
				totalList.put(gu[i], GoodResList);
			}
			
			System.out.println("DAO : 맛집 리스트 저장완료");			
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			closeDB();
		}
		
		return totalList;
	}	
	// getGoodResList()
	////////////////////////////////////////////////////////////////////////////////////
	
	
	////////////////////////////////////////////////////////////////////////////////////
	// getGoodResList()
	public HashMap<String, List> getGoodResMenuList(){
		List<GoodResBoardBean> GoodResMenuList = null;
		
		HashMap<String, List> totalMenuList = new HashMap<>();
		GoodResBoardBean grb = null;
		
		String[] menu = {"%국밥%"};
		
		try {
			//1.2. 디비연결
			con = getCon();
			
			for(int i=0; i<menu.length;i++){
				
				GoodResMenuList = new ArrayList<GoodResBoardBean>();
				
				//3. sql구문 작성  & pstmt 객체 생성
				sql ="select * from f_goodres where f_gr_menu=?";
				
				pstmt = con.prepareStatement(sql);
							
				pstmt.setString(1, menu[i]);
	
				//4. sql구문 실행
				rs = pstmt.executeQuery();
				
				//5. 데이터 처리 
				while(rs.next()){
					grb = new GoodResBoardBean();
					
					grb.setF_gr_name(rs.getString("f_gr_name"));
					grb.setF_gr_menu(rs.getString("f_gr_menu"));
					grb.setF_gr_img(rs.getString("f_gr_img"));
/*					grb.setF_gr_addr(rs.getString("f_gr_addr"));
					grb.setF_gr_cnt(rs.getInt("F_gr_cnt"));
					grb.setF_gr_content(rs.getString("f_gr_content"));
					grb.setF_gr_detailAddr(rs.getString("f_gr_detailAddr"));
					grb.setF_gr_eximg(rs.getString("f_gr_eximg"));
					grb.setF_gr_gu(rs.getString("f_gr_gu"));
					grb.setF_gr_hp(rs.getString("f_gr_hp"));
					grb.setF_gr_lati(rs.getDouble("f_gr_lati"));
					grb.setF_gr_like(rs.getInt("f_gr_like"));
					grb.setF_gr_loca(rs.getString("f_gr_loca"));
					grb.setF_gr_long(rs.getDouble("f_gr_long"));
					grb.setF_gr_num(rs.getInt("f_gr_num"));
					grb.setF_gr_open(rs.getString("f_gr_open"));
					grb.setF_gr_rv_cnt(rs.getInt("f_gr_rv_cnt"));
					grb.setF_gr_staravg(rs.getFloat("f_gr_staravg"));
					grb.setF_gr_tel(rs.getString("f_gr_tel"));
					grb.setF_gr_thumb(rs.getString("f_gr_thumb"));
*/									
					// 리스트 한칸에 맛집 1곳의 정보를 저장
					GoodResMenuList.add(grb);
				} // while
				
				totalMenuList.put(menu[i], GoodResMenuList);
			}
			
			System.out.println("DAO : 메뉴별 맛집 리스트 저장완료");			
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			closeDB();
		}
		
		return totalMenuList;
	}	
	// getGoodResList()
	////////////////////////////////////////////////////////////////////////////////////
	
	
	////////////////////////////////////////////////////////////////////////////////////
	//
	//
	////////////////////////////////////////////////////////////////////////////////////
	
	
	////////////////////////////////////////////////////////////////////////////////////
	//
	//
	////////////////////////////////////////////////////////////////////////////////////
}
